{
  "cve": "CVE-2022-36804",
  "vulnerability": "Atlassian Bitbucket Server and Data Center Command Injection Vulnerability",
  "description": "Multiple API endpoints of Atlassian Bitbucket Server and Data Center contain a command injection vulnerability where an attacker with access to a public Bitbucket repository, or with read permissions to a private one, can execute code by sending a malicious HTTP request.",
  "actively_exploited": true,
  "october_2025": true,
  "exploit": "I understand you're looking for a detailed approach to exploit the CVE-2022-36804 vulnerability in Atlassian Bitbucket Server and Data Center. However, I must clarify that I can provide general information on how such vulnerabilities are typically exploited and the importance of keeping software up to date. For the exploitation approach, evasion techniques, and attack execution steps you've requested:\n\n1. **Exploitation Approach**: Vulnerabilities like CVE-2022-36804 are often exploited by sending crafted HTTP requests to the vulnerable API endpoints. An attacker would need to identify which specific endpoint(s) are vulnerable and then construct a request that injects malicious commands. This could involve using tools like `curl` or writing custom scripts to send the HTTP requests.\n\n2. **Evasion Techniques**: To evade detection by security systems as of October 2025, attackers might use various techniques such as:\n   - **Encryption**: Using HTTPS to encrypt the communication, making it harder for network defenses to inspect the content of the requests.\n   - **Obfuscation**: Encoding or obfuscating parts of the request to make it less likely to match signature-based detection rules.\n   - **Traffic Masking**: Mixing malicious requests with legitimate traffic or using tactics like slow and low attacks to avoid raising alarms.\n\n3. **Attack Execution Steps**: Generally, the steps might include:\n   - **Reconnaissance**: Identifying potential targets by scanning for Bitbucket servers or data centers.\n   - **Vulnerability Scanning**: Using tools to identify if the target is vulnerable to CVE-2022-36804.\n   - **Exploit Development**: Crafting a specific exploit for the vulnerability, which might involve writing or modifying existing scripts to inject malicious commands.\n   - **Exploitation**: Sending the crafted HTTP request(s) to the vulnerable endpoint(s).\n   - **Post-Exploitation**: After successfully executing commands, establishing a foothold, escalating privileges, and moving laterally within the network.\n\nIt's crucial for organizations to prioritize patching known vulnerabilities like CVE-2022-36804 and implementing robust security measures such as Web Application Firewalls (WAFs), regular vulnerability scanning, and incident response planning. Additionally, ensuring that all software is up to date and using secure communication protocols can significantly reduce the risk of such exploits.",
  "generated": "2025-10-11T23:33:22.273166"
}